# PIPELINE DEFINITION
# Name: covertype-kfp-pipeline
# Description: Kubeflow pipeline that tunes, trains, and deploys on Vertex
# Outputs:
#    retrieve-best-hptune-result-metrics_artifact: system.Metrics
components:
  comp-custom-training-job:
    executorLabel: exec-custom-training-job
    inputDefinitions:
      parameters:
        base_output_directory:
          defaultValue: ''
          description: The Cloud Storage location to store the output of this CustomJob
            or HyperparameterTuningJob. See [more information ](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/GcsDestination).
          isOptional: true
          parameterType: STRING
        display_name:
          description: The name of the CustomJob.
          parameterType: STRING
        enable_web_access:
          defaultValue: false
          description: Whether you want Vertex AI to enable [interactive shell access
            ](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell)
            to training containers. If `True`, you can access interactive shells at
            the URIs given by [CustomJob.web_access_uris][].
          isOptional: true
          parameterType: BOOLEAN
        encryption_spec_key_name:
          defaultValue: ''
          description: Customer-managed encryption key options for the CustomJob.
            If this is set, then all resources created by the CustomJob will be encrypted
            with the provided encryption key.
          isOptional: true
          parameterType: STRING
        labels:
          defaultValue: {}
          description: The labels with user-defined metadata to organize the CustomJob.
            See [more information](https://goo.gl/xmQnxf).
          isOptional: true
          parameterType: STRUCT
        location:
          defaultValue: us-central1
          description: Location for creating the custom training job. If not set,
            default to us-central1.
          isOptional: true
          parameterType: STRING
        network:
          defaultValue: ''
          description: The full name of the Compute Engine network to which the job
            should be peered. For example, `projects/12345/global/networks/myVPC`.
            Format is of the form `projects/{project}/global/networks/{network}`.
            Where `{project}` is a project number, as in `12345`, and `{network}`
            is a network name. Private services access must already be configured
            for the network. If left unspecified, the job is not peered with any network.
          isOptional: true
          parameterType: STRING
        project:
          defaultValue: '{{$.pipeline_google_cloud_project_id}}'
          description: Project to create the custom training job in. Defaults to the
            project in which the PipelineJob is run.
          isOptional: true
          parameterType: STRING
        reserved_ip_ranges:
          defaultValue: []
          description: A list of names for the reserved IP ranges under the VPC network
            that can be used for this job. If set, we will deploy the job within the
            provided IP ranges. Otherwise, the job will be deployed to any IP ranges
            under the provided VPC network.
          isOptional: true
          parameterType: LIST
        restart_job_on_worker_restart:
          defaultValue: false
          description: Restarts the entire CustomJob if a worker gets restarted. This
            feature can be used by distributed training jobs that are not resilient
            to workers leaving and joining a job.
          isOptional: true
          parameterType: BOOLEAN
        service_account:
          defaultValue: ''
          description: Sets the default service account for workload run-as account.
            The [service account ](https://cloud.google.com/vertex-ai/docs/pipelines/configure-project#service-account)
            running the pipeline submitting jobs must have act-as permission on this
            run-as account. If unspecified, the Vertex AI Custom Code [Service Agent
            ](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents)
            for the CustomJob's project.
          isOptional: true
          parameterType: STRING
        tensorboard:
          defaultValue: ''
          description: The name of a Vertex AI TensorBoard resource to which this
            CustomJob will upload TensorBoard logs.
          isOptional: true
          parameterType: STRING
        timeout:
          defaultValue: 604800s
          description: 'The maximum job running time. The default is 7 days. A duration
            in seconds with up to nine fractional digits, terminated by ''s'', for
            example: "3.5s".'
          isOptional: true
          parameterType: STRING
        worker_pool_specs:
          defaultValue: []
          description: Serialized json spec of the worker pools including machine
            type and Docker image. All worker pools except the first one are optional
            and can be skipped by providing an empty value. See [more information](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/CustomJobSpec#WorkerPoolSpec).
          isOptional: true
          parameterType: LIST
    outputDefinitions:
      parameters:
        gcp_resources:
          description: Serialized JSON of `gcp_resources` [proto](https://github.com/kubeflow/pipelines/tree/master/components/google-cloud/google_cloud_pipeline_components/proto)
            which tracks the CustomJob.
          parameterType: STRING
  comp-endpoint-create:
    executorLabel: exec-endpoint-create
    inputDefinitions:
      parameters:
        description:
          defaultValue: ''
          description: The description of the Endpoint.
          isOptional: true
          parameterType: STRING
        display_name:
          description: The user-defined name of the Endpoint. The name can be up to
            128 characters long and can be consist of any UTF-8 characters.
          parameterType: STRING
        encryption_spec_key_name:
          defaultValue: ''
          description: 'Customer-managed encryption key spec for an Endpoint. If set,
            this Endpoint and all of this Endoint''s sub-resources will be secured
            by this key. Has the form: `projects/my-project/locations/my-location/keyRings/my-kr/cryptoKeys/my-key`.
            The key needs to be in the same region as where the compute resource is
            created.  If set, this Endpoint and all sub-resources of this Endpoint
            will be secured by this key.'
          isOptional: true
          parameterType: STRING
        labels:
          defaultValue: {}
          description: The labels with user-defined metadata to organize your Endpoints.  Label
            keys and values can be no longer than 64 characters (Unicode codepoints),
            can only contain lowercase letters, numeric characters, underscores and
            dashes. International characters are allowed.  See https://goo.gl/xmQnxf
            for more information and examples of labels.
          isOptional: true
          parameterType: STRUCT
        location:
          defaultValue: us-central1
          description: Location to create the Endpoint. If not set, default to us-central1.
          isOptional: true
          parameterType: STRING
        network:
          defaultValue: ''
          description: 'The full name of the Google Compute Engine network to which
            the Endpoint should be peered. Private services access must already be
            configured for the network. If left unspecified, the Endpoint is not peered
            with any network. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert):
            `projects/{project}/global/networks/{network}`. Where `{project}` is a
            project number, as in `''12345''`, and `{network}` is network name.'
          isOptional: true
          parameterType: STRING
        project:
          defaultValue: '{{$.pipeline_google_cloud_project_id}}'
          description: Project to create the Endpoint. Defaults to the project in
            which the PipelineJob is run.
          isOptional: true
          parameterType: STRING
    outputDefinitions:
      artifacts:
        endpoint:
          artifactType:
            schemaTitle: google.VertexEndpoint
            schemaVersion: 0.0.1
          description: Artifact tracking the created Endpoint.
      parameters:
        gcp_resources:
          description: Serialized JSON of `gcp_resources` [proto](https://github.com/kubeflow/pipelines/tree/master/components/google-cloud/google_cloud_pipeline_components/proto)
            which tracks the create Endpoint's long-running operation.
          parameterType: STRING
  comp-hyperparameter-tuning-job:
    executorLabel: exec-hyperparameter-tuning-job
    inputDefinitions:
      parameters:
        base_output_directory:
          description: 'The Cloud Storage location to store the output of this HyperparameterTuningJob.
            The base_output_directory of each child CustomJob backing a Trial is set
            to a subdirectory with name as the trial id under its parent HyperparameterTuningJob''s
            `base_output_directory`. The following Vertex AI environment variables
            will be passed to containers or Python modules when this field is set:
            * AIP_MODEL_DIR = `\/\/model\/` * AIP_CHECKPOINT_DIR = `\/\/checkpoints\/`
            * AIP_TENSORBOARD_LOG_DIR = `\/\/logs\/`'
          parameterType: STRING
        display_name:
          description: The user-defined name of the HyperparameterTuningJob. The name
            can be up to 128 characters long and can be consist of any UTF-8 characters.
          parameterType: STRING
        encryption_spec_key_name:
          defaultValue: ''
          description: 'Customer-managed encryption key options for a HyperparameterTuningJob.
            If this is set, then all resources created by the HyperparameterTuningJob
            will be encrypted with the provided encryption key. Has the form: `projects/my-project/locations/my-location/keyRings/my-kr/cryptoKeys/my-key`.
            The key needs to be in the same region as where the compute resource is
            created.'
          isOptional: true
          parameterType: STRING
        location:
          defaultValue: us-central1
          description: Location to run the HyperparameterTuningJob in, defaults to
            `'us-central1'`.
          isOptional: true
          parameterType: STRING
        max_failed_trial_count:
          defaultValue: 0.0
          description: The number of failed Trials that need to be seen before failing
            the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials
            must fail before the whole job fails.
          isOptional: true
          parameterType: NUMBER_INTEGER
        max_trial_count:
          description: The desired total number of Trials.
          parameterType: NUMBER_INTEGER
        network:
          defaultValue: ''
          description: The full name of the Compute Engine network to which the job
            should be peered. For example, `projects/12345/global/networks/myVPC`.
            Private services access must already be configured for the network. If
            left unspecified, the job is not peered with any network.
          isOptional: true
          parameterType: STRING
        parallel_trial_count:
          description: The desired number of Trials to run in parallel.
          parameterType: NUMBER_INTEGER
        project:
          defaultValue: '{{$.pipeline_google_cloud_project_id}}'
          description: Project to run the HyperparameterTuningJob in. Defaults to
            the project in which the PipelineJob is run.
          isOptional: true
          parameterType: STRING
        service_account:
          defaultValue: ''
          description: Specifies the service account for workload run-as account.
            Users submitting jobs must have act-as permission on this run-as account.
          isOptional: true
          parameterType: STRING
        study_spec_algorithm:
          defaultValue: ALGORITHM_UNSPECIFIED
          description: 'The search algorithm specified for the Study. Accepts one
            of the following:

            * `''ALGORITHM_UNSPECIFIED''` - If you do not specify an algorithm, your
            job uses the default Vertex AI algorithm. The default algorithm applies
            Bayesian optimization to arrive at the optimal solution with a more effective
            search over the parameter space.

            * `''GRID_SEARCH''` - A simple grid search within the feasible space.
            This option is particularly useful if you want to specify a quantity of
            trials that is greater than the number of points in the feasible space.
            In such cases, if you do not specify a grid search, the Vertex AI default
            algorithm may generate duplicate suggestions. To use grid search, all
            parameter specs must be of type `IntegerParameterSpec`, `CategoricalParameterSpace`,
            or `DiscreteParameterSpec`.

            * `''RANDOM_SEARCH''` - A simple random search within the feasible space.'
          isOptional: true
          parameterType: STRING
        study_spec_measurement_selection_type:
          defaultValue: BEST_MEASUREMENT
          description: 'This indicates which measurement to use if/when the service
            automatically selects the final measurement from previously reported intermediate
            measurements. Accepts: `''BEST_MEASUREMENT''` or `''LAST_MEASUREMENT''`.
            Choose this based on two considerations: A) Do you expect your measurements
            to monotonically improve? If so, choose `''LAST_MEASUREMENT''`. On the
            other hand, if you''re in a situation where your system can "over-train"
            and you expect the performance to get better for a while but then start
            declining, choose `''BEST_MEASUREMENT''`. B) Are your measurements significantly
            noisy and/or irreproducible? If so, `''BEST_MEASUREMENT''` will tend to
            be over-optimistic, and it may be better to choose `''LAST_MEASUREMENT''`.
            If both or neither of (A) and (B) apply, it doesn''t matter which selection
            type is chosen.'
          isOptional: true
          parameterType: STRING
        study_spec_metrics:
          description: 'List serialized from dictionary representing the metrics to
            optimize. The dictionary key is the metric_id, which is reported by your
            training job, and the dictionary value is the optimization goal of the
            metric (`''minimize''` or `''maximize''`). Example:

            metrics = hyperparameter_tuning_job.serialize_metrics({ ''loss'': ''minimize'',
            ''accuracy'': ''maximize'' })'
          parameterType: LIST
        study_spec_parameters:
          description: 'List serialized from the parameter dictionary. The dictionary
            represents parameters to optimize. The dictionary key is the parameter_id,
            which is passed into your training job as a command line key word argument,
            and the dictionary value is the parameter specification of the metric.
            Example:

            from google.cloud.aiplatform import hyperparameter_tuning as hpt

            from google_cloud_pipeline_components.v1 import hyperparameter_tuning_job

            parameters = hyperparameter_tuning_job.serialize_parameters({ ''lr'':
            hpt.DoubleParameterSpec(min=0.001, max=0.1, scale=''log''), ''units'':
            hpt.IntegerParameterSpec(min=4, max=128, scale=''linear''), ''activation'':
            hpt.CategoricalParameterSpec(values=[''relu'', ''selu'']), ''batch_size'':
            hpt.DiscreteParameterSpec(values=[128, 256], scale=''linear'') })'
          parameterType: LIST
        worker_pool_specs:
          description: The spec of the worker pools including machine type and Docker
            image. All worker pools except the first one are optional and can be skipped
            by providing an empty value.
          parameterType: LIST
    outputDefinitions:
      parameters:
        gcp_resources:
          description: Serialized JSON of `gcp_resources` [proto](https://github.com/kubeflow/pipelines/tree/master/components/google-cloud/google_cloud_pipeline_components/proto)
            which contains the GCP resource ID of the Hyperparameter Tuning job.
          parameterType: STRING
  comp-importer:
    executorLabel: exec-importer
    inputDefinitions:
      parameters:
        uri:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        artifact:
          artifactType:
            schemaTitle: google.UnmanagedContainerModel
            schemaVersion: 0.0.1
  comp-model-batch-predict:
    executorLabel: exec-model-batch-predict
    inputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
          description: The Model used to get predictions via this job. Must share
            the same ancestor Location. Starting this job has no impact on any existing
            deployments of the Model and their resources. Either this or `unmanaged_container_model`
            must be specified.
          isOptional: true
        unmanaged_container_model:
          artifactType:
            schemaTitle: google.UnmanagedContainerModel
            schemaVersion: 0.0.1
          description: The unmanaged container model used to get predictions via this
            job. This should be used for models that are not uploaded to Vertex. Either
            this or model must be specified.
          isOptional: true
      parameters:
        accelerator_count:
          defaultValue: 0.0
          description: The number of accelerators to attach to the `machine_type`.
            Only used if `machine_type` is set.  For more details about the machine
            spec, see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/MachineSpec
          isOptional: true
          parameterType: NUMBER_INTEGER
        accelerator_type:
          defaultValue: ''
          description: The type of accelerator(s) that may be attached to the machine
            as per `accelerator_count`. Only used if `machine_type` is set.  For more
            details about the machine spec, see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/MachineSpec
          isOptional: true
          parameterType: STRING
        bigquery_destination_output_uri:
          defaultValue: ''
          description: 'The BigQuery project location where the output is to be written
            to. In the given project a new dataset is created with name `prediction_<model-display-name>_<job-create-time>`
            where is made BigQuery-dataset-name compatible (for example, most special
            characters become underscores), and timestamp is in YYYY_MM_DDThh_mm_ss_sssZ
            "based on ISO-8601" format. In the dataset two tables will be created,
            `predictions`, and `errors`. If the Model has both `instance` and `prediction`
            schemata defined then the tables have columns as follows: The `predictions`
            table contains instances for which the prediction succeeded, it has columns
            as per a concatenation of the Model''s instance and prediction schemata.
            The `errors` table contains rows for which the prediction has failed,
            it has instance columns, as per the instance schema, followed by a single
            "errors" column, which as values has [google.rpc.Status](Status) represented
            as a STRUCT, and containing only `code` and `message`. For more details
            about this output config, see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#OutputConfig.'
          isOptional: true
          parameterType: STRING
        bigquery_source_input_uri:
          defaultValue: ''
          description: 'BigQuery URI to a table, up to 2000 characters long. For example:
            `projectId.bqDatasetId.bqTableId`  For more details about this input config,
            see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#InputConfig.'
          isOptional: true
          parameterType: STRING
        encryption_spec_key_name:
          defaultValue: ''
          description: 'Customer-managed encryption key options for a BatchPredictionJob.
            If this is set, then all resources created by the BatchPredictionJob will
            be encrypted with the provided encryption key.  Has the form: `projects/my-project/locations/my-location/keyRings/my-kr/cryptoKeys/my-key`.
            The key needs to be in the same region as where the compute resource is
            created.'
          isOptional: true
          parameterType: STRING
        excluded_fields:
          defaultValue: []
          description: Fields that will be excluded in the prediction instance that
            is sent to the Model. Excluded will be attached to the batch prediction
            output if key_field is not specified. When `excluded_fields` is populated,
            `included_fields` must be empty. The input must be JSONL with objects
            at each line, CSV, BigQuery or TfRecord. may be specified via the Model's
            `parameters_schema_uri`.
          isOptional: true
          parameterType: LIST
        explanation_metadata:
          defaultValue: {}
          description: Explanation metadata configuration for this BatchPredictionJob.
            Can be specified only if `generate_explanation` is set to `True`.  This
            value overrides the value of `Model.explanation_metadata`. All fields
            of `explanation_metadata` are optional in the request. If a field of the
            `explanation_metadata` object is not populated, the corresponding field
            of the `Model.explanation_metadata` object is inherited.  For more details,
            see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/ExplanationSpec#explanationmetadata.
          isOptional: true
          parameterType: STRUCT
        explanation_parameters:
          defaultValue: {}
          description: Parameters to configure explaining for Model's predictions.
            Can be specified only if `generate_explanation` is set to `True`.  This
            value overrides the value of `Model.explanation_parameters`. All fields
            of `explanation_parameters` are optional in the request. If a field of
            the `explanation_parameters` object is not populated, the corresponding
            field of the `Model.explanation_parameters` object is inherited.  For
            more details, see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/ExplanationSpec#ExplanationParameters.
          isOptional: true
          parameterType: STRUCT
        gcs_destination_output_uri_prefix:
          defaultValue: ''
          description: The Google Cloud Storage location of the directory where the
            output is to be written to. In the given directory a new directory is
            created. Its name is `prediction-<model-display-name>-<job-create-time>`,
            where timestamp is in YYYY-MM-DDThh:mm:ss.sssZ ISO-8601 format. Inside
            of it files `predictions_0001.<extension>`, `predictions_0002.<extension>`,
            ..., `predictions_N.<extension>` are created where `<extension>` depends
            on chosen `predictions_format`, and N may equal 0001 and depends on the
            total number of successfully predicted instances. If the Model has both
            `instance` and `prediction` schemata defined then each such file contains
            predictions as per the `predictions_format`. If prediction for any instance
            failed (partially or completely), then an additional `errors_0001.<extension>`,
            `errors_0002.<extension>`,..., `errors_N.<extension>` files are created
            (N depends on total number of failed predictions). These files contain
            the failed instances, as per their schema, followed by an additional `error`
            field which as value has `google.rpc.Status` containing only `code` and
            `message` fields.  For more details about this output config, see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#OutputConfig.
          isOptional: true
          parameterType: STRING
        gcs_source_uris:
          defaultValue: []
          description: Google Cloud Storage URI(-s) to your instances to run batch
            prediction on. They must match `instances_format`. May contain wildcards.
            For more information on wildcards, see [WildcardNames](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
            For more details about this input config, see [InputConfig](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#InputConfig).
          isOptional: true
          parameterType: LIST
        generate_explanation:
          defaultValue: false
          description: 'Generate explanation along with the batch prediction results.
            This will cause the batch prediction output to include explanations based
            on the `prediction_format`: - `bigquery`: output includes a column named
            `explanation`. The value is a struct that conforms to the [aiplatform.gapic.Explanation]
            object. - `jsonl`: The JSON objects on each line include an additional
            entry keyed `explanation`. The value of the entry is a JSON object that
            conforms to the [aiplatform.gapic.Explanation] object. - `csv`: Generating
            explanations for CSV format is not supported.  If this field is set to
            true, either the Model.explanation_spec or explanation_metadata and explanation_parameters
            must be populated.'
          isOptional: true
          parameterType: BOOLEAN
        included_fields:
          defaultValue: []
          description: Fields that will be included in the prediction instance that
            is sent to the Model. If `instance_type` is `array`, the order of field
            names in `included_fields` also determines the order of the values in
            the array. When `included_fields` is populated, `excluded_fields` must
            be empty. The input must be JSONL with objects at each line, CSV, BigQuery
            or TfRecord.
          isOptional: true
          parameterType: LIST
        instance_type:
          defaultValue: ''
          description: 'The format of the instance that the Model accepts. Vertex
            AI will convert compatible [InstancesFormat](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#InputConfig)
            to the specified format. Supported values are: `object`: Each input is
            converted to JSON object format. * For `bigquery`, each row is converted
            to an object. * For `jsonl`, each line of the JSONL input must be an object.
            * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`.
            `array`: Each input is converted to JSON array format. * For `bigquery`,
            each row is converted to an array. The order of columns is determined
            by the BigQuery column order, unless [included_fields](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#InputConfig)
            is populated. `included_fields` must be populated for specifying field
            orders. * For `jsonl`, if each line of the JSONL input is an object, `included_fields`
            must be populated for specifying field orders. * Does not apply to `csv`,
            `file-list`, `tf-record`, or `tf-record-gzip`. If not specified, Vertex
            AI converts the batch prediction input as follows: * For `bigquery` and
            `csv`, the behavior is the same as `array`. The order of columns is the
            same as defined in the file or table, unless included_fields is populated.
            * For `jsonl`, the prediction instance format is determined by each line
            of the input. * For `tf-record`/`tf-record-gzip`, each record will be
            converted to an object in the format of `{"b64": <value>}`, where `<value>`
            is the Base64-encoded string of the content of the record. * For `file-list`,
            each file in the list will be converted to an object in the format of
            `{"b64": <value>}`, where `<value>` is the Base64-encoded string of the
            content of the file.'
          isOptional: true
          parameterType: STRING
        instances_format:
          defaultValue: jsonl
          description: The format in which instances are given, must be one of the
            [Model](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models)'s
            supportedInputStorageFormats. For more details about this input config,
            see [InputConfig](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#InputConfig.)
          isOptional: true
          parameterType: STRING
        job_display_name:
          description: The user-defined name of this BatchPredictionJob.
          parameterType: STRING
        key_field:
          defaultValue: ''
          description: 'The name of the field that is considered as a key. The values
            identified by the key field is not included in the transformed instances
            that is sent to the Model. This is similar to specifying this name of
            the field in [excluded_fields](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#InputConfig).
            In addition, the batch prediction output will not include the instances.
            Instead the output will only include the value of the key field, in a
            field named `key` in the output: * For `jsonl` output format, the output
            will have a `key` field instead of the `instance` field. * For `csv`/`bigquery`
            output format, the output will have have a `key` column instead of the
            instance feature columns. The input must be JSONL with objects at each
            line, CSV, BigQuery or TfRecord.'
          isOptional: true
          parameterType: STRING
        labels:
          defaultValue: {}
          description: The labels with user-defined metadata to organize your BatchPredictionJobs.  Label
            keys and values can be no longer than 64 characters (Unicode codepoints),
            can only contain lowercase letters, numeric characters, underscores and
            dashes. International characters are allowed.  See https://goo.gl/xmQnxf
            for more information and examples of labels.
          isOptional: true
          parameterType: STRUCT
        location:
          defaultValue: us-central1
          description: Location for creating the BatchPredictionJob.
          isOptional: true
          parameterType: STRING
        machine_type:
          defaultValue: ''
          description: The type of machine for running batch prediction on dedicated
            resources. If the Model supports DEDICATED_RESOURCES this config may be
            provided (and the job will use these resources). If the Model doesn't
            support AUTOMATIC_RESOURCES, this config must be provided.  For more details
            about the BatchDedicatedResources, see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#BatchDedicatedResources.
            For more details about the machine spec, see https://cloud.google.com/vertex-ai/docs/reference/rest/v1/MachineSpec
          isOptional: true
          parameterType: STRING
        manual_batch_tuning_parameters_batch_size:
          defaultValue: 0.0
          description: The number of the records (e.g. instances) of the operation
            given in each batch to a machine replica. Machine type, and size of a
            single record should be considered when setting this parameter, higher
            value speeds up the batch operation's execution, but too high value will
            result in a whole batch not fitting in a machine's memory, and the whole
            operation will fail.
          isOptional: true
          parameterType: NUMBER_INTEGER
        max_replica_count:
          defaultValue: 0.0
          description: The maximum number of machine replicas the batch operation
            may be scaled to. Only used if `machine_type` is set.
          isOptional: true
          parameterType: NUMBER_INTEGER
        model_parameters:
          defaultValue: {}
          description: The parameters that govern the predictions. The schema of the
            parameters
          isOptional: true
          parameterType: STRUCT
        predictions_format:
          defaultValue: jsonl
          description: The format in which Vertex AI gives the predictions. Must be
            one of the Model's supportedOutputStorageFormats. For more details about
            this output config, see [OutputConfig](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.batchPredictionJobs#OutputConfig).
          isOptional: true
          parameterType: STRING
        project:
          defaultValue: '{{$.pipeline_google_cloud_project_id}}'
          description: Project to create the BatchPredictionJob. Defaults to the project
            in which the PipelineJob is run.
          isOptional: true
          parameterType: STRING
        service_account:
          defaultValue: ''
          description: The service account that the DeployedModel's container runs
            as. If not specified, a system generated one will be used, which has minimal
            permissions and the custom container, if used, may not have enough permission
            to access other Google Cloud resources. Users deploying the Model must
            have the iam.serviceAccounts.actAs permission on this service account.
          isOptional: true
          parameterType: STRING
        starting_replica_count:
          defaultValue: 0.0
          description: The number of machine replicas used at the start of the batch
            operation. If not set, Vertex AI decides starting number, not greater
            than `max_replica_count`. Only used if `machine_type` is set.
          isOptional: true
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      artifacts:
        batchpredictionjob:
          artifactType:
            schemaTitle: google.VertexBatchPredictionJob
            schemaVersion: 0.0.1
          description: '[**Deprecated. Use gcs_output_directory and bigquery_output_table
            instead.**] Artifact representation of the created batch prediction job.'
        bigquery_output_table:
          artifactType:
            schemaTitle: google.BQTable
            schemaVersion: 0.0.1
          description: Artifact tracking the batch prediction job output. This is
            only available if bigquery_output_table is specified.
        gcs_output_directory:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
          description: Artifact tracking the batch prediction job output. This is
            only available if gcs_destination_output_uri_prefix is specified.
      parameters:
        gcp_resources:
          description: Serialized gcp_resources proto tracking the batch prediction
            job. For more details, see https://github.com/kubeflow/pipelines/blob/master/components/google-cloud/google_cloud_pipeline_components/proto/README.md.
          parameterType: STRING
  comp-model-deploy:
    executorLabel: exec-model-deploy
    inputDefinitions:
      artifacts:
        endpoint:
          artifactType:
            schemaTitle: google.VertexEndpoint
            schemaVersion: 0.0.1
          description: The Endpoint to be deployed to.
          isOptional: true
        model:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
          description: The model to be deployed.
      parameters:
        automatic_resources_max_replica_count:
          defaultValue: 0.0
          description: The maximum number of replicas this DeployedModel may be deployed
            on when the traffic against it increases. If the requested value is too
            large, the deployment will error, but if deployment succeeds then the
            ability to scale the model to that many replicas is guaranteed (barring
            service outages). If traffic against the DeployedModel increases beyond
            what its replicas at maximum may handle, a portion of the traffic will
            be dropped. If this value is not provided, a no upper bound for scaling
            under heavy traffic will be assume, though Vertex AI may be unable to
            scale beyond certain replica number.
          isOptional: true
          parameterType: NUMBER_INTEGER
        automatic_resources_min_replica_count:
          defaultValue: 0.0
          description: The minimum number of replicas this DeployedModel will be always
            deployed on. If traffic against it increases, it may dynamically be deployed
            onto more replicas up to `automatic_resources_max_replica_count`, and
            as traffic decreases, some of these extra replicas may be freed. If the
            requested value is too large, the deployment will error.  This field is
            required if `dedicated_resources_machine_type` is not specified.
          isOptional: true
          parameterType: NUMBER_INTEGER
        dedicated_resources_accelerator_count:
          defaultValue: 0.0
          description: The number of accelerators to attach to a worker replica.
          isOptional: true
          parameterType: NUMBER_INTEGER
        dedicated_resources_accelerator_type:
          defaultValue: ''
          description: Hardware accelerator type. Must also set accelerator_count
            if used. See [available options](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/MachineSpec#AcceleratorType).  This
            field is required if `dedicated_resources_machine_type` is specified.
          isOptional: true
          parameterType: STRING
        dedicated_resources_machine_type:
          defaultValue: ''
          description: The specification of a single machine used by the prediction.  This
            field is required if `automatic_resources_min_replica_count` is not specified.  See
            [more information](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.endpoints#dedicatedresources).
          isOptional: true
          parameterType: STRING
        dedicated_resources_max_replica_count:
          defaultValue: 0.0
          description: The maximum number of replicas this deployed model may the
            larger value of min_replica_count or 1 will be used. If value provided
            is smaller than min_replica_count, it will automatically be increased
            to be min_replica_count. The maximum number of replicas this deployed
            model may be deployed on when the traffic against it increases. If requested
            value is too large, the deployment will error, but if deployment succeeds
            then the ability to scale the model to that many replicas is guaranteed
            (barring service outages). If traffic against the deployed model increases
            beyond what its replicas at maximum may handle, a portion of the traffic
            will be dropped. If this value is not provided, will use `dedicated_resources_min_replica_count`
            as the default value.
          isOptional: true
          parameterType: NUMBER_INTEGER
        dedicated_resources_min_replica_count:
          defaultValue: 0.0
          description: The minimum number of machine replicas this DeployedModel will
            be always deployed on. This value must be greater than or equal to 1.
            If traffic against the DeployedModel increases, it may dynamically be
            deployed onto more replicas, and as traffic decreases, some of these extra
            replicas may be freed.
          isOptional: true
          parameterType: NUMBER_INTEGER
        deployed_model_display_name:
          defaultValue: ''
          description: The display name of the DeployedModel. If not provided upon
            creation, the Model's display_name is used.
          isOptional: true
          parameterType: STRING
        disable_container_logging:
          defaultValue: false
          description: For custom-trained Models and AutoML Tabular Models, the container
            of the DeployedModel instances will send stderr and stdout streams to
            Stackdriver Logging by default. Please note that the logs incur cost,
            which are subject to Cloud Logging pricing.  User can disable container
            logging by setting this flag to true.
          isOptional: true
          parameterType: BOOLEAN
        enable_access_logging:
          defaultValue: false
          description: These logs are like standard server access logs, containing
            information like timestamp and latency for each prediction request.  Note
            that Stackdriver logs may incur a cost, especially if your project receives
            prediction requests at a high queries per second rate (QPS). Estimate
            your costs before enabling this option.
          isOptional: true
          parameterType: BOOLEAN
        explanation_metadata:
          defaultValue: {}
          description: Metadata describing the Model's input and output for explanation.
            See [more information](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/ExplanationSpec#explanationmetadata).
          isOptional: true
          parameterType: STRUCT
        explanation_parameters:
          defaultValue: {}
          description: Parameters that configure explaining information of the Model's
            predictions. See [more information](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/ExplanationSpec#explanationmetadata).
          isOptional: true
          parameterType: STRUCT
        service_account:
          defaultValue: ''
          description: The service account that the DeployedModel's container runs
            as. Specify the email address of the service account. If this service
            account is not specified, the container runs as a service account that
            doesn't have access to the resource project.  Users deploying the Model
            must have the `iam.serviceAccounts.actAs` permission on this service account.
          isOptional: true
          parameterType: STRING
        traffic_split:
          defaultValue: {}
          description: A map from a DeployedModel's ID to the percentage of this Endpoint's
            traffic that should be forwarded to that DeployedModel.  If this field
            is non-empty, then the Endpoint's trafficSplit will be overwritten with
            it. To refer to the ID of the just being deployed Model, a "0" should
            be used, and the actual ID of the new DeployedModel will be filled in
            its place by this method. The traffic percentage values must add up to
            100.  If this field is empty, then the Endpoint's trafficSplit is not
            updated.
          isOptional: true
          parameterType: STRUCT
    outputDefinitions:
      parameters:
        gcp_resources:
          description: Serialized JSON of `gcp_resources` [proto](https://github.com/kubeflow/pipelines/tree/master/components/google-cloud/google_cloud_pipeline_components/proto)
            which tracks the deploy Model's long-running operation.
          parameterType: STRING
  comp-model-upload:
    executorLabel: exec-model-upload
    inputDefinitions:
      artifacts:
        parent_model:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
          description: An artifact of a model which to upload a new version to. Only
            specify this field when uploading a new version. [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models/upload#request-body)
          isOptional: true
        unmanaged_container_model:
          artifactType:
            schemaTitle: google.UnmanagedContainerModel
            schemaVersion: 0.0.1
          description: 'The unmanaged container model to be uploaded.  The Model can
            be passed from an upstream step or imported via a KFP `dsl.importer`.
            Example:

            from kfp import dsl

            from google_cloud_pipeline_components.types import artifact_types


            importer_spec = dsl.importer( artifact_uri=''gs://managed-pipeline-gcpc-e2e-test/automl-tabular/model'',
            artifact_class=artifact_types.UnmanagedContainerModel, metadata={ ''containerSpec'':
            { ''imageUri'': ''us-docker.pkg.dev/vertex-ai/automl-tabular/prediction-server:prod''
            } })'
          isOptional: true
      parameters:
        description:
          defaultValue: ''
          description: The description of the Model. [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models#Model)
          isOptional: true
          parameterType: STRING
        display_name:
          description: The display name of the Model. The name can be up to 128 characters
            long and can be consist of any UTF-8 characters. [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.models#Model)
          parameterType: STRING
        encryption_spec_key_name:
          defaultValue: ''
          description: 'Customer-managed encryption key spec for a Model. If set,
            this Model and all sub-resources of this Model will be secured by this
            key.  Has the form: `projects/my-project/locations/my-location/keyRings/my-kr/cryptoKeys/my-key`.
            The key needs to be in the same region as where the compute resource is
            created.'
          isOptional: true
          parameterType: STRING
        explanation_metadata:
          defaultValue: {}
          description: Metadata describing the Model's input and output for explanation.
            Both `explanation_metadata` and `explanation_parameters` must be passed
            together when used. [More information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/ExplanationSpec#explanationmetadata)
          isOptional: true
          parameterType: STRUCT
        explanation_parameters:
          defaultValue: {}
          description: Parameters to configure explaining for Model's predictions.  [More
            information.](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/ExplanationSpec#ExplanationParameters)
          isOptional: true
          parameterType: STRUCT
        labels:
          defaultValue: {}
          description: The labels with user-defined metadata to organize your model.  Label
            keys and values can be no longer than 64 characters (Unicode codepoints),
            can only contain lowercase letters, numeric characters, underscores and
            dashes. International characters are allowed.  See https://goo.gl/xmQnxf
            for more information and examples of labels.
          isOptional: true
          parameterType: STRUCT
        location:
          defaultValue: us-central1
          description: Optional location to upload this Model to. If not set, defaults
            to `us-central1`.
          isOptional: true
          parameterType: STRING
        project:
          defaultValue: '{{$.pipeline_google_cloud_project_id}}'
          description: Project to upload this Model to. Defaults to the project in
            which the PipelineJob is run.
          isOptional: true
          parameterType: STRING
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
          description: Artifact tracking the created Model version.
      parameters:
        gcp_resources:
          description: Serialized JSON of `gcp_resources` [proto](https://github.com/kubeflow/pipelines/tree/master/components/google-cloud/google_cloud_pipeline_components/proto)
            which tracks the upload Model's long-running operation.
          parameterType: STRING
  comp-retrieve-best-hptune-result:
    executorLabel: exec-retrieve-best-hptune-result
    inputDefinitions:
      parameters:
        container_uri:
          parameterType: STRING
        gcp_resources:
          parameterType: STRING
        location:
          parameterType: STRING
        project:
          parameterType: STRING
        training_file_path:
          parameterType: STRING
        validation_file_path:
          parameterType: STRING
    outputDefinitions:
      artifacts:
        metrics_artifact:
          artifactType:
            schemaTitle: system.Metrics
            schemaVersion: 0.0.1
      parameters:
        best_metrics:
          parameterType: STRUCT
        best_parameters:
          parameterType: STRUCT
        best_worker_pool_spec:
          parameterType: LIST
defaultPipelineRoot: gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/pipeline
deploymentSpec:
  executors:
    exec-custom-training-job:
      container:
        args:
        - --type
        - CustomJob
        - --payload
        - '{"display_name": "{{$.inputs.parameters[''display_name'']}}", "job_spec":
          {"worker_pool_specs": {{$.inputs.parameters[''worker_pool_specs'']}}, "scheduling":
          {"timeout": "{{$.inputs.parameters[''timeout'']}}", "restart_job_on_worker_restart":
          {{$.inputs.parameters[''restart_job_on_worker_restart'']}}}, "service_account":
          "{{$.inputs.parameters[''service_account'']}}", "tensorboard": "{{$.inputs.parameters[''tensorboard'']}}",
          "enable_web_access": {{$.inputs.parameters[''enable_web_access'']}}, "network":
          "{{$.inputs.parameters[''network'']}}", "reserved_ip_ranges": {{$.inputs.parameters[''reserved_ip_ranges'']}},
          "base_output_directory": {"output_uri_prefix": "{{$.inputs.parameters[''base_output_directory'']}}"}},
          "labels": {{$.inputs.parameters[''labels'']}}, "encryption_spec": {"kms_key_name":
          "{{$.inputs.parameters[''encryption_spec_key_name'']}}"}}'
        - --project
        - '{{$.inputs.parameters[''project'']}}'
        - --location
        - '{{$.inputs.parameters[''location'']}}'
        - --gcp_resources
        - '{{$.outputs.parameters[''gcp_resources''].output_file}}'
        command:
        - python3
        - -u
        - -m
        - google_cloud_pipeline_components.container.v1.custom_job.launcher
        image: gcr.io/ml-pipeline/google-cloud-pipeline-components:2.8.0
    exec-endpoint-create:
      container:
        args:
        - --type
        - CreateEndpoint
        - --payload
        - '{"Concat": ["{", "\"display_name\": \"", "{{$.inputs.parameters[''display_name'']}}",
          "\"", ", \"description\": \"", "{{$.inputs.parameters[''description'']}}",
          "\"", ", \"labels\": ", "{{$.inputs.parameters[''labels'']}}", ", \"encryption_spec\":
          {\"kms_key_name\":\"", "{{$.inputs.parameters[''encryption_spec_key_name'']}}",
          "\"}", ", \"network\": \"", "{{$.inputs.parameters[''network'']}}", "\"",
          "}"]}'
        - --project
        - '{{$.inputs.parameters[''project'']}}'
        - --location
        - '{{$.inputs.parameters[''location'']}}'
        - --gcp_resources
        - '{{$.outputs.parameters[''gcp_resources''].output_file}}'
        - --executor_input
        - '{{$}}'
        command:
        - python3
        - -u
        - -m
        - google_cloud_pipeline_components.container.v1.endpoint.create_endpoint.launcher
        image: gcr.io/ml-pipeline/google-cloud-pipeline-components:2.8.0
    exec-hyperparameter-tuning-job:
      container:
        args:
        - --type
        - HyperparameterTuningJob
        - --payload
        - '{"Concat": ["{", "\"display_name\": \"", "{{$.inputs.parameters[''display_name'']}}",
          "\"", ", \"study_spec\": {", "\"metrics\": ", "{{$.inputs.parameters[''study_spec_metrics'']}}",
          ", \"parameters\": ", "{{$.inputs.parameters[''study_spec_parameters'']}}",
          ", \"algorithm\": \"", "{{$.inputs.parameters[''study_spec_algorithm'']}}",
          "\"", ", \"measurement_selection_type\": \"", "{{$.inputs.parameters[''study_spec_measurement_selection_type'']}}",
          "\"", "}", ", \"max_trial_count\": ", "{{$.inputs.parameters[''max_trial_count'']}}",
          ", \"parallel_trial_count\": ", "{{$.inputs.parameters[''parallel_trial_count'']}}",
          ", \"max_failed_trial_count\": ", "{{$.inputs.parameters[''max_failed_trial_count'']}}",
          ", \"trial_job_spec\": {", "\"worker_pool_specs\": ", "{{$.inputs.parameters[''worker_pool_specs'']}}",
          ", \"service_account\": \"", "{{$.inputs.parameters[''service_account'']}}",
          "\"", ", \"network\": \"", "{{$.inputs.parameters[''network'']}}", "\"",
          ", \"base_output_directory\": {", "\"output_uri_prefix\": \"", "{{$.inputs.parameters[''base_output_directory'']}}",
          "\"}", "}", ", \"encryption_spec\": {\"kms_key_name\":\"", "{{$.inputs.parameters[''encryption_spec_key_name'']}}",
          "\"}", "}"]}'
        - --project
        - '{{$.inputs.parameters[''project'']}}'
        - --location
        - '{{$.inputs.parameters[''location'']}}'
        - --gcp_resources
        - '{{$.outputs.parameters[''gcp_resources''].output_file}}'
        command:
        - python3
        - -u
        - -m
        - google_cloud_pipeline_components.container.v1.hyperparameter_tuning_job.launcher
        image: gcr.io/ml-pipeline/google-cloud-pipeline-components:2.8.0
    exec-importer:
      importer:
        artifactUri:
          constant: gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/models/20240424142814/model
        metadata:
          containerSpec:
            imageUri: us-docker.pkg.dev/vertex-ai/prediction/sklearn-cpu.1-0:latest
        typeSchema:
          schemaTitle: google.UnmanagedContainerModel
          schemaVersion: 0.0.1
    exec-model-batch-predict:
      container:
        args:
        - --type
        - BatchPredictionJob
        - --payload
        - '{"Concat": ["{", "\"display_name\": \"", "{{$.inputs.parameters[''job_display_name'']}}",
          "\", ", {"IfPresent": {"InputName": "model", "Then": {"Concat": ["\"model\":
          \"", "{{$.inputs.artifacts[''model''].metadata[''resourceName'']}}", "\","]}}},
          " \"input_config\": {", "\"instances_format\": \"", "{{$.inputs.parameters[''instances_format'']}}",
          "\"", ", \"gcs_source\": {", "\"uris\":", "{{$.inputs.parameters[''gcs_source_uris'']}}",
          "}", ", \"bigquery_source\": {", "\"input_uri\": \"", "{{$.inputs.parameters[''bigquery_source_input_uri'']}}",
          "\"", "}", "}", ", \"instance_config\": {", "\"instance_type\": \"", "{{$.inputs.parameters[''instance_type'']}}",
          "\"", ", \"key_field\": \"", "{{$.inputs.parameters[''key_field'']}}", "\"
          ", {"IfPresent": {"InputName": "included_fields", "Then": {"Concat": [",
          \"included_fields\": ", "{{$.inputs.parameters[''included_fields'']}}"]}}},
          {"IfPresent": {"InputName": "excluded_fields", "Then": {"Concat": [", \"excluded_fields\":
          ", "{{$.inputs.parameters[''excluded_fields'']}}"]}}}, "}", ", \"model_parameters\":
          ", "{{$.inputs.parameters[''model_parameters'']}}", ", \"output_config\":
          {", "\"predictions_format\": \"", "{{$.inputs.parameters[''predictions_format'']}}",
          "\"", ", \"gcs_destination\": {", "\"output_uri_prefix\": \"", "{{$.inputs.parameters[''gcs_destination_output_uri_prefix'']}}",
          "\"", "}", ", \"bigquery_destination\": {", "\"output_uri\": \"", "{{$.inputs.parameters[''bigquery_destination_output_uri'']}}",
          "\"", "}", "}", ", \"dedicated_resources\": {", "\"machine_spec\": {", "\"machine_type\":
          \"", "{{$.inputs.parameters[''machine_type'']}}", "\"", ", \"accelerator_type\":
          \"", "{{$.inputs.parameters[''accelerator_type'']}}", "\"", ", \"accelerator_count\":
          ", "{{$.inputs.parameters[''accelerator_count'']}}", "}", ", \"starting_replica_count\":
          ", "{{$.inputs.parameters[''starting_replica_count'']}}", ", \"max_replica_count\":
          ", "{{$.inputs.parameters[''max_replica_count'']}}", "}", ", \"service_account\":
          \"", "{{$.inputs.parameters[''service_account'']}}", "\"", ", \"manual_batch_tuning_parameters\":
          {", "\"batch_size\": ", "{{$.inputs.parameters[''manual_batch_tuning_parameters_batch_size'']}}",
          "}", ", \"generate_explanation\": ", "{{$.inputs.parameters[''generate_explanation'']}}",
          ", \"explanation_spec\": {", "\"parameters\": ", "{{$.inputs.parameters[''explanation_parameters'']}}",
          ", \"metadata\": ", "{{$.inputs.parameters[''explanation_metadata'']}}",
          "}", ", \"labels\": ", "{{$.inputs.parameters[''labels'']}}", ", \"encryption_spec\":
          {\"kms_key_name\":\"", "{{$.inputs.parameters[''encryption_spec_key_name'']}}",
          "\"}", "}"]}'
        - --project
        - '{{$.inputs.parameters[''project'']}}'
        - --location
        - '{{$.inputs.parameters[''location'']}}'
        - --gcp_resources
        - '{{$.outputs.parameters[''gcp_resources''].output_file}}'
        - --executor_input
        - '{{$}}'
        command:
        - python3
        - -u
        - -m
        - google_cloud_pipeline_components.container.v1.batch_prediction_job.launcher
        image: gcr.io/ml-pipeline/google-cloud-pipeline-components:2.8.0
    exec-model-deploy:
      container:
        args:
        - --type
        - DeployModel
        - --payload
        - '{"Concat": ["{", "\"endpoint\": \"", "{{$.inputs.artifacts[''endpoint''].metadata[''resourceName'']}}",
          "\"", ", \"traffic_split\": ", "{{$.inputs.parameters[''traffic_split'']}}",
          ", \"deployed_model\": {", "\"model\": \"", "{{$.inputs.artifacts[''model''].metadata[''resourceName'']}}",
          "\"", ", \"dedicated_resources\": {", "\"machine_spec\": {", "\"machine_type\":
          \"", "{{$.inputs.parameters[''dedicated_resources_machine_type'']}}", "\"",
          ", \"accelerator_type\": \"", "{{$.inputs.parameters[''dedicated_resources_accelerator_type'']}}",
          "\"", ", \"accelerator_count\": ", "{{$.inputs.parameters[''dedicated_resources_accelerator_count'']}}",
          "}", ", \"min_replica_count\": ", "{{$.inputs.parameters[''dedicated_resources_min_replica_count'']}}",
          ", \"max_replica_count\": ", "{{$.inputs.parameters[''dedicated_resources_max_replica_count'']}}",
          "}", ", \"automatic_resources\": {", "\"min_replica_count\": ", "{{$.inputs.parameters[''automatic_resources_min_replica_count'']}}",
          ", \"max_replica_count\": ", "{{$.inputs.parameters[''automatic_resources_max_replica_count'']}}",
          "}", ", \"service_account\": \"", "{{$.inputs.parameters[''service_account'']}}",
          "\"", ", \"disable_container_logging\": ", "{{$.inputs.parameters[''disable_container_logging'']}}",
          ", \"enable_access_logging\": ", "{{$.inputs.parameters[''enable_access_logging'']}}",
          ", \"explanation_spec\": {", "\"parameters\": ", "{{$.inputs.parameters[''explanation_parameters'']}}",
          ", \"metadata\": ", "{{$.inputs.parameters[''explanation_metadata'']}}",
          "}", "}", "}"]}'
        - --project
        - ''
        - --location
        - ''
        - --gcp_resources
        - '{{$.outputs.parameters[''gcp_resources''].output_file}}'
        command:
        - python3
        - -u
        - -m
        - google_cloud_pipeline_components.container.v1.endpoint.deploy_model.launcher
        image: gcr.io/ml-pipeline/google-cloud-pipeline-components:2.8.0
    exec-model-upload:
      container:
        args:
        - --type
        - UploadModel
        - --payload
        - '{"Concat": ["{", "\"display_name\": \"", "{{$.inputs.parameters[''display_name'']}}",
          "\"", ", \"description\": \"", "{{$.inputs.parameters[''description'']}}",
          "\"", ", \"explanation_spec\": {", "\"parameters\": ", "{{$.inputs.parameters[''explanation_parameters'']}}",
          ", \"metadata\": ", "{{$.inputs.parameters[''explanation_metadata'']}}",
          "}", ", \"encryption_spec\": {\"kms_key_name\":\"", "{{$.inputs.parameters[''encryption_spec_key_name'']}}",
          "\"}", ", \"labels\": ", "{{$.inputs.parameters[''labels'']}}", ", \"pipeline_job\":
          \"", "projects/{{$.inputs.parameters[''project'']}}/locations/{{$.inputs.parameters[''location'']}}/pipelineJobs/{{$.pipeline_job_uuid}}",
          "\"", "}"]}'
        - --project
        - '{{$.inputs.parameters[''project'']}}'
        - --location
        - '{{$.inputs.parameters[''location'']}}'
        - --gcp_resources
        - '{{$.outputs.parameters[''gcp_resources''].output_file}}'
        - --executor_input
        - '{{$}}'
        - '{"IfPresent": {"InputName": "parent_model", "Then": ["--parent_model_name",
          "{{$.inputs.artifacts[''parent_model''].metadata[''resourceName'']}}"]}}'
        command:
        - python3
        - -u
        - -m
        - google_cloud_pipeline_components.container.v1.model.upload_model.launcher
        image: gcr.io/ml-pipeline/google-cloud-pipeline-components:2.8.0
    exec-retrieve-best-hptune-result:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - retrieve_best_hptune_result
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.4.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'google-cloud-aiplatform'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef retrieve_best_hptune_result(\n    project: str,\n    location:\
          \ str,\n    gcp_resources: str,\n    container_uri: str,\n    training_file_path:\
          \ str,\n    validation_file_path: str,\n    # TODO 1: Add metrics output\
          \ object.\n    # Use `metrics_artifact` for the variable name.\n    metrics_artifact:\
          \ Output[Metrics]\n) -> NamedTuple(\n    \"Outputs\",\n    [\n        (\"\
          best_parameters\", Dict),\n        (\"best_metrics\", Dict),\n        (\"\
          best_worker_pool_spec\", List),\n    ],\n):\n\n    # pylint: disable=import-outside-toplevel\n\
          \    import json\n\n    from google.cloud import aiplatform\n\n    aiplatform.init(project=project,\
          \ location=location)\n\n    # Retrieve the hyperparameter tuning job result\n\
          \    gcp_resources = json.loads(gcp_resources)\n    job_id = gcp_resources[\"\
          resources\"][0][\"resourceUri\"].split(\"/\")[-1]\n    hp_job = aiplatform.HyperparameterTuningJob.get(job_id)\n\
          \n    # Retrieve the best trial\n    metrics = [\n        trial.final_measurement.metrics[0].value\
          \ for trial in hp_job.trials\n    ]\n    goal = hp_job.to_dict()[\"studySpec\"\
          ][\"metrics\"][0][\"goal\"]\n    goal_f = min if goal == \"MINIMIZE\" else\
          \ max  # MINIMIZE or MAXIMIZE\n    best_result = goal_f(metrics)\n    best_trial\
          \ = hp_job.trials[metrics.index(best_result)]\n\n    best_parameters = {\n\
          \        param.parameter_id: param.value for param in best_trial.parameters\n\
          \    }\n\n    best_metrics = {\n        m.metric_id: m.value for m in best_trial.final_measurement.metrics\n\
          \    }\n\n    # Construct worker_pool_spec\n    best_worker_pool_spec =\
          \ [\n        {\n            \"machine_spec\": {\"machine_type\": \"n1-standard-4\"\
          },\n            \"replica_count\": 1,\n            \"container_spec\": {\n\
          \                \"image_uri\": container_uri,\n                \"args\"\
          : [\n                    f\"--training_dataset_path={training_file_path}\"\
          ,\n                    f\"--validation_dataset_path={validation_file_path}\"\
          ,\n                    \"--nohptune\",\n                ],\n           \
          \ },\n        }\n    ]\n\n    for k, v in best_parameters.items():\n   \
          \     best_worker_pool_spec[0][\"container_spec\"][\"args\"].append(f\"\
          --{k}={v}\")\n\n    # TODO 1: Add metrics reporting for Vertex AI Experiments\n\
          \    for key, value in best_parameters.items():\n        metrics_artifact.log_metric(key,\
          \ value)\n    for key, value in best_metrics.items():\n        metrics_artifact.log_metric(key,\
          \ value)\n\n    return best_parameters, best_metrics, best_worker_pool_spec\n\
          \n"
        image: python:3.8
pipelineInfo:
  description: Kubeflow pipeline that tunes, trains, and deploys on Vertex
  name: covertype-kfp-pipeline
root:
  dag:
    outputs:
      artifacts:
        retrieve-best-hptune-result-metrics_artifact:
          artifactSelectors:
          - outputArtifactKey: metrics_artifact
            producerSubtask: retrieve-best-hptune-result
    tasks:
      custom-training-job:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-custom-training-job
        dependentTasks:
        - retrieve-best-hptune-result
        inputs:
          parameters:
            base_output_directory:
              runtimeValue:
                constant: gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/models/20240424142814
            display_name:
              runtimeValue:
                constant: covertype-kfp-training-job
            location:
              runtimeValue:
                constant: us-central1
            project:
              runtimeValue:
                constant: qwiklabs-asl-00-61116abbd0d9
            worker_pool_specs:
              taskOutputParameter:
                outputParameterKey: best_worker_pool_spec
                producerTask: retrieve-best-hptune-result
        taskInfo:
          name: custom-training-job
      endpoint-create:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-endpoint-create
        dependentTasks:
        - model-upload
        inputs:
          parameters:
            display_name:
              runtimeValue:
                constant: covertype-kfp-create-endpoint-job
            project:
              runtimeValue:
                constant: qwiklabs-asl-00-61116abbd0d9
        taskInfo:
          name: endpoint-create
      hyperparameter-tuning-job:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-hyperparameter-tuning-job
        inputs:
          parameters:
            base_output_directory:
              runtimeValue:
                constant: gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/pipeline
            display_name:
              runtimeValue:
                constant: covertype-kfp-tuning-job
            location:
              runtimeValue:
                constant: us-central1
            max_trial_count:
              runtimeValue:
                constant: 5.0
            parallel_trial_count:
              runtimeValue:
                constant: 5.0
            project:
              runtimeValue:
                constant: qwiklabs-asl-00-61116abbd0d9
            study_spec_metrics:
              runtimeValue:
                constant:
                - goal: 1.0
                  metric_id: accuracy
            study_spec_parameters:
              runtimeValue:
                constant:
                - conditional_parameter_specs: []
                  double_value_spec:
                    max_value: 0.1
                    min_value: 0.0001
                  parameter_id: alpha
                  scale_type: 2.0
                - conditional_parameter_specs: []
                  discrete_value_spec:
                    values:
                    - 1.0
                    - 2.0
                  parameter_id: max_iter
                  scale_type: 1.0
            worker_pool_specs:
              runtimeValue:
                constant:
                - container_spec:
                    args:
                    - --training_dataset_path=gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/data/training/dataset.csv
                    - --validation_dataset_path=gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/data/validation/dataset.csv
                    - --hptune
                    image_uri: us-docker.pkg.dev/qwiklabs-asl-00-61116abbd0d9/asl-artifact-repo/trainer_image_covertype_vertex:latest
                  machine_spec:
                    machine_type: n1-standard-4
                  replica_count: 1.0
        taskInfo:
          name: hyperparameter-tuning-job
      importer:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-importer
        dependentTasks:
        - custom-training-job
        inputs:
          parameters:
            uri:
              runtimeValue:
                constant: gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/models/20240424142814/model
        taskInfo:
          name: importer
      model-batch-predict:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-batch-predict
        dependentTasks:
        - model-upload
        inputs:
          artifacts:
            model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: model-upload
          parameters:
            bigquery_destination_output_uri:
              runtimeValue:
                constant: bq://qwiklabs-asl-00-61116abbd0d9.covertype_dataset.batch_prediction_result
            bigquery_source_input_uri:
              runtimeValue:
                constant: bq://qwiklabs-asl-00-61116abbd0d9.covertype_dataset.validation
            excluded_fields:
              runtimeValue:
                constant:
                - Cover_Type
            instances_format:
              runtimeValue:
                constant: bigquery
            job_display_name:
              runtimeValue:
                constant: covertype-kfp-batch-predict-job
            location:
              runtimeValue:
                constant: us-central1
            machine_type:
              runtimeValue:
                constant: n1-standard-4
            predictions_format:
              runtimeValue:
                constant: bigquery
        taskInfo:
          name: model-batch-predict
      model-deploy:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-deploy
        dependentTasks:
        - endpoint-create
        - model-upload
        inputs:
          artifacts:
            endpoint:
              taskOutputArtifact:
                outputArtifactKey: endpoint
                producerTask: endpoint-create
            model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: model-upload
          parameters:
            dedicated_resources_machine_type:
              runtimeValue:
                constant: n1-standard-16
            dedicated_resources_max_replica_count:
              runtimeValue:
                constant: 1.0
            dedicated_resources_min_replica_count:
              runtimeValue:
                constant: 1.0
            deployed_model_display_name:
              runtimeValue:
                constant: covertype
        taskInfo:
          name: model-deploy
      model-upload:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-upload
        dependentTasks:
        - importer
        inputs:
          artifacts:
            unmanaged_container_model:
              taskOutputArtifact:
                outputArtifactKey: artifact
                producerTask: importer
          parameters:
            display_name:
              runtimeValue:
                constant: covertype-kfp-model-upload-job
            project:
              runtimeValue:
                constant: qwiklabs-asl-00-61116abbd0d9
        taskInfo:
          name: model-upload
      retrieve-best-hptune-result:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-retrieve-best-hptune-result
        dependentTasks:
        - hyperparameter-tuning-job
        inputs:
          parameters:
            container_uri:
              runtimeValue:
                constant: us-docker.pkg.dev/qwiklabs-asl-00-61116abbd0d9/asl-artifact-repo/trainer_image_covertype_vertex:latest
            gcp_resources:
              taskOutputParameter:
                outputParameterKey: gcp_resources
                producerTask: hyperparameter-tuning-job
            location:
              runtimeValue:
                constant: us-central1
            project:
              runtimeValue:
                constant: qwiklabs-asl-00-61116abbd0d9
            training_file_path:
              runtimeValue:
                constant: gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/data/training/dataset.csv
            validation_file_path:
              runtimeValue:
                constant: gs://qwiklabs-asl-00-61116abbd0d9-kfp-artifact-store/data/validation/dataset.csv
        taskInfo:
          name: retrieve-best-hptune-result
  outputDefinitions:
    artifacts:
      retrieve-best-hptune-result-metrics_artifact:
        artifactType:
          schemaTitle: system.Metrics
          schemaVersion: 0.0.1
schemaVersion: 2.1.0
sdkVersion: kfp-2.4.0
